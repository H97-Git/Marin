<UserControl mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="700"
             x:Class="WaifuGallery.Views.MainView"
             x:DataType="vm:MainViewViewModel"
             xmlns:controls="clr-namespace:WaifuGallery.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fileManager="clr-namespace:WaifuGallery.Controls.FileManager"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:tabs="clr-namespace:WaifuGallery.Controls.Tabs"
             xmlns:ui="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             xmlns:vm="clr-namespace:WaifuGallery.ViewModels"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns="https://github.com/avaloniaui"
             xmlns:preferences="clr-namespace:WaifuGallery.Controls.Tabs.Preferences"
             Name="MainViewControl"
             KeyDown="MainView_OnKeyDown">
    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainViewViewModel />
    </Design.DataContext>

    <!-- Main Grid -->
    <Grid RowDefinitions="Auto,*,Auto,Auto" Name="MainGrid">
        <!-- Menu Bar-->
        <controls:MenuBar Grid.Row="0"
                          DataContext="{Binding MenuBarViewModel}"
                          IsVisible="{Binding IsMenuBarVisible}" />
        <!-- Main Area -->
        <Grid Grid.Row="1" Name="MainArea">
            <!-- Tabs -->
            <tabs:TabsControl DataContext="{Binding TabsViewModel}" />
            <!-- File Manager -->
            <Panel Name="FileManagerPanel" Background="{Binding FileManagerViewModel.FileManagerBackground}">
                <fileManager:FileManager DataContext="{Binding FileManagerViewModel}" />
            </Panel>
        </Grid>
        <ui:InfoBar Grid.Row="2"
                    Background="{Binding StatusBarViewModel.BackgroundColor}"
                    Foreground="{DynamicResource Brush.Foreground}"
                    Height="32"
                    IsClosable="False"
                    IsOpen="{Binding StatusBarViewModel.IsStatusBarVisible}"
                    Margin="1"
                    Message="{Binding StatusBarViewModel.Message}"
                    Name="InfoBar"
                    Severity="{Binding StatusBarViewModel.Severity}"
                    Title="{Binding StatusBarViewModel.Title}" />
    </Grid>
</UserControl>